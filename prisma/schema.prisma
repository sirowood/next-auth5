datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String   @unique
  emailVerified   DateTime? @map("email_verified")
  image           String?
  password        String?
  role            UserRole  @default(USER)
  accounts        Account[]

  createdAt       DateTime    @db.Timestamptz(3) @default(now())  @map("created_at")
  updatedAt       DateTime    @db.Timestamptz(3) @updatedAt @map("updated_at")

  @@map("users")
}

model Account {
  userId                String      @map("user_id")
  type                  String    
  provider              String    
  providerAccountId     String      @map("provider_account_id")
  refreshToken          String?     @db.Text @map("refresh_token")
  accessToken           String?     @db.Text @map("access_token")
  expiresAt             Int?        @map("expires_at")
  tokenType             String?     @map("token_type")
  scope                 String?   
  idToken               String?     @db.Text @map("id_token")
  sessionState          String?     @map("session_state")

  createdAt             DateTime    @db.Timestamptz(3) @default(now())  @map("created_at")
  updatedAt             DateTime    @db.Timestamptz(3) @updatedAt @map("updated_at")
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
  @@map("verification_tokens")
}